# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build - @adviser/cement

on:
  push:
  pull_request:

env:
  IN_CI: "in_ci"

jobs:
  build:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: 'ts/pnpm-lock.yaml'

      - name: Build JS @adviser/cement
        run: |
          cd ts
          pnpm remove playwright-chromium
          pnpm install
          pnpm run prettier --check
          pnpm run lint
          pnpm run build
          PLAYWRIGHT_VERSION=$(pnpm why playwright --json | jq -r '.[0].devDependencies.playwright.version // empty')
          docker run --rm \
            -v $(pwd):/work \
            -w /work \
            mcr.microsoft.com/playwright:v${PLAYWRIGHT_VERSION}-noble \
            bash -c "npm run test:js"
          pnpm run test:deno 
          pnpm run smoke

#      - uses: mabels/neckless@main
#        if: startsWith(github.ref, 'refs/tags/v')
#        with:
#          version: v0.1.16

      - name: Publish runified NPM
        if: startsWith(github.ref, 'refs/tags/v')
#        env:
#          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
#          eval $(neckless kv ls --shKeyValue --ghAddMask NPM_PASS  NPM_USER "NPM_TOTP@Totp()")
          # env | sort | grep NPM
#          token=$(curl -H "npm-otp: $NPM_TOTP" \
#               -X PUT \
#               -H 'content-type: application/json' \
#               -d "{\"name\":\"$NPM_USER\", \"password\": \"$NPM_PASS\"}" \
#               https://registry.npmjs.org/-/user/org.couchdb.user:$NPM_USER | jq -r .token)
#          echo "//registry.npmjs.org/:_authToken=$token" > $HOME/.npmrc
          cd ts
          cd pubdir
          pnpm install -g npm@11
#          pnpm publish --otp=$(neckless kv ls --onlyValue "NPM_TOTP@Totp()") --access public --no-git-checks
          pnpm publish kv ls --access public --no-git-checks

      - name: Publish runified JSR
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ts
          pnpm run deno:publish

